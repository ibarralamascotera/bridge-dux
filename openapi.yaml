openapi: 3.1.0
info:
  title: La Mascotera · Bridge Dux
  version: "1.0.0"

servers:
  - url: https://bridge-dux.onrender.com

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    DuxOk:
      type: object
      description: "Respuesta passthrough desde Dux"
      properties:
        data:
          description: "Contenido devuelto por Dux"
          type: object
          additionalProperties: true
      additionalProperties: true

    DuxError:
      type: object
      description: "Formato de error del bridge"
      properties:
        error:
          type: string
        detail:
          type: string
      required: [error]
      additionalProperties: true

    CrearPedidoBody:
      type: object
      required: [clienteId, items]
      properties:
        clienteId:
          type: integer
        observaciones:
          type: string
        externalId:
          type: string
          description: "Idempotencia: clave única del pedido"
        items:
          type: array
          items:
            type: object
            required: [itemId, cantidad]
            properties:
              itemId: { type: integer }
              cantidad: { type: number }
              precio: { type: number }

    FreeForm:
      type: object
      description: "Cuerpo libre, passthrough al servicio Dux"
      properties:
        payload:
          type: object
          additionalProperties: true
      additionalProperties: true

paths:
  /health:
    get:
      operationId: health
      summary: Healthcheck (sin auth)
      security: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean

  # ----------------- GET (consultas) -----------------

  /duxc/items:
    get:
      operationId: buscar_items
      tags: [Items]
      summary: Lista items desde Dux (paginado)
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 20, minimum: 1, maximum: 100 }
          description: Cantidad de registros por página.
        - in: query
          name: offset
          schema: { type: integer, default: 0, minimum: 0 }
          description: Desplazamiento (salto) de página.
        - in: query
          name: buscar
          schema: { type: string }
          description: Texto de búsqueda opcional.
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }
        "400":
          description: Error del cliente
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxError" } }
        "502":
          description: Error del servidor remoto
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxError" } }

  /duxc/compras:
    get:
      operationId: listar_compras
      tags: [Compras]
      summary: Lista compras
      parameters:
        - in: query
          name: fechaDesde
          schema: { type: string }
        - in: query
          name: fechaHasta
          schema: { type: string }
        - in: query
          name: idEmpresa
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer, default: 20 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/depositos:
    get:
      operationId: listar_depositos
      tags: [Maestros]
      summary: Lista depósitos
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/empresas:
    get:
      operationId: listar_empresas
      tags: [Maestros]
      summary: Lista empresas
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/facturas:
    get:
      operationId: listar_facturas
      tags: [Ventas]
      summary: Lista facturas
      parameters:
        - in: query
          name: idEmpresa
          required: true
          schema: { type: integer }
          description: ID de la empresa.
        - in: query
          name: idSucursal
          required: false
          schema: { type: integer }
          description: ID de sucursal (opcional).
        - in: query
          name: fechaDesde
          required: false
          schema: { type: string, format: date }
          description: Desde (YYYY-MM-DD).
        - in: query
          name: fechaHasta
          required: false
          schema: { type: string, format: date }
          description: Hasta (YYYY-MM-DD).
        - in: query
          name: limit
          required: false
          schema: { type: integer, minimum: 1, maximum: 1000, default: 50 }
          description: Tamaño de página.
        - in: query
          name: offset
          required: false
          schema: { type: integer, minimum: 0, default: 0 }
          description: Desplazamiento.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxOk"
        "4XX":
          description: Error del cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"
        "5XX":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"

  /duxc/pedidos:
    get:
      operationId: listar_pedidos
      tags: [Ventas]
      summary: Lista pedidos
      parameters:
        - in: query
          name: idEmpresa
          required: true
          schema: { type: integer }
          description: ID de la empresa.
        - in: query
          name: idSucursal
          required: false
          schema: { type: integer }
          description: ID de sucursal (opcional).
        - in: query
          name: fechaDesde
          required: false
          schema: { type: string, format: date }
          description: Desde (YYYY-MM-DD).
        - in: query
          name: fechaHasta
          required: false
          schema: { type: string, format: date }
          description: Hasta (YYYY-MM-DD).
        - in: query
          name: limit
          required: false
          schema: { type: integer, minimum: 1, maximum: 1000, default: 50 }
          description: Tamaño de página.
        - in: query
          name: offset
          required: false
          schema: { type: integer, minimum: 0, default: 0 }
          description: Desplazamiento.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxOk"
        "4XX":
          description: Error del cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"
        "5XX":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"


  /duxc/listas-precio-venta:
    get:
      operationId: listar_listas_precio_venta
      tags: [Maestros]
      summary: Lista de precios de venta
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/localidades:
    get:
      operationId: listar_localidades
      tags: [Maestros]
      summary: Lista localidades
      parameters:
        - in: query
          name: idProvincia
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
        - in: query
          name: buscar
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/percepciones:
    get:
      operationId: listar_percepciones
      tags: [Maestros]
      summary: Lista percepciones/impuestos
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/personal:
    get:
      operationId: listar_personal
      tags: [Maestros]
      summary: Lista personal
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
        - in: query
          name: buscar
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/provincias:
    get:
      operationId: listar_provincias
      tags: [Maestros]
      summary: Lista provincias
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/rubros:
    get:
      operationId: listar_rubros
      tags: [Maestros]
      summary: Lista rubros
      parameters:
        - in: query
          name: limit
          required: false
          schema: { type: integer, minimum: 1, maximum: 1000, default: 50 }
          description: Tamaño de página.
        - in: query
          name: offset
          required: false
          schema: { type: integer, minimum: 0, default: 0 }
          description: Desplazamiento.
        - in: query
          name: buscar
          required: false
          schema: { type: string }
          description: Texto de búsqueda (opcional).
        # Si corresponde:
        - in: query
          name: idDeposito
          required: false
          schema: { type: integer }
          description: Filtro por depósito (opcional).
        - in: query
          name: idSucursal
          required: false
          schema: { type: integer }
          description: Filtro por sucursal (opcional).

      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/subrubros:
    get:
      operationId: listar_subrubros
      tags: [Maestros]
      summary: Lista subrubros
      parameters:
        - in: query
          name: idRubro
          schema: { type: integer }
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
        - in: query
          name: buscar
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/sucursales:
    get:
      operationId: listar_sucursales
      tags: [Maestros]
      summary: Lista sucursales
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        "200":
          description: OK
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /analytics/top-vendidos:
    get:
      operationId: analytics_top_vendidos
      tags: [Analytics]
      summary: Top productos vendidos (agregado en el bridge)
      parameters:
      - in: query
        name: idEmpresa
        required: true
        schema: { type: integer }
      - in: query
        name: idSucursal
        required: false
        schema: { type: integer }
      - in: query
        name: fechaDesde
        required: false
        schema: { type: string, format: date }
      - in: query
        name: fechaHasta
        required: false
        schema: { type: string, format: date }
      - in: query
        name: top
        required: false
        schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      - in: query
        name: source
        required: false
        schema:
          type: string
          enum: [pedidos, facturas]
        description: Origen de datos; default "pedidos".

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  top:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId: { type: integer }
                        nombre: { type: string, nullable: true }
                        cantidad: { type: number }
                  total_items: { type: integer }
                  rango:
                    type: object
                    properties:
                      fechaDesde: { type: string, format: date, nullable: true }
                      fechaHasta: { type: string, format: date, nullable: true }
                  idEmpresa: { type: integer }
        "4XX":
          description: Error del cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"
        "5XX":
          description: Error del servidor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuxError"

  # ----------------- POST (operaciones) -----------------

  /duxc/pedido:
    post:
      operationId: crear_pedido
      tags: [Ventas]
      summary: Crea un pedido en Dux
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
          description: Clave única idempotente (alternativa a externalId).
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/CrearPedidoBody" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }
        "400":
          description: Error del cliente
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxError" } }
        "502":
          description: Error del servidor remoto
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxError" } }

  /duxc/factura:
    post:
      operationId: crear_factura
      tags: [Ventas]
      summary: Emite una factura en Dux
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
          description: Clave única idempotente.
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/nota-credito:
    post:
      operationId: crear_nota_credito
      tags: [Ventas]
      summary: Emite una nota de crédito
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/nota-debito:
    post:
      operationId: crear_nota_debito
      tags: [Ventas]
      summary: Emite una nota de débito
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/cobranza:
    post:
      operationId: crear_cobranza
      tags: [Tesoreria]
      summary: Registra una cobranza
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/pago:
    post:
      operationId: crear_pago
      tags: [Tesoreria]
      summary: Registra un pago
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/remito:
    post:
      operationId: crear_remito
      tags: [Stock]
      summary: Crea un remito
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/transferencia:
    post:
      operationId: crear_transferencia
      tags: [Stock]
      summary: Crea una transferencia entre depósitos
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/ajuste-stock:
    post:
      operationId: crear_ajuste_stock
      tags: [Stock]
      summary: Crea un ajuste de stock
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }

  /duxc/movimiento-stock:
    post:
      operationId: crear_movimiento_stock
      tags: [Stock]
      summary: Crea un movimiento de stock
      parameters:
        - in: header
          name: Idempotency-Key
          schema: { type: string }
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/FreeForm" }
      responses:
        "200":
          description: Creado
          content:
            application/json: { schema: { $ref: "#/components/schemas/DuxOk" } }


